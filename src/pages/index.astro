---
import Layout from '../layouts/Layout.astro';
import examData from '../data/exams.json';

interface ExamSession {
  session: string;
  date: string;
}

interface ExamData {
  id: string;
  name: string;
  fullName: string;
  sessions: ExamSession[];
  description: string;
  category: string;
  eligibility: string;
  subjects: string[];
  duration: string;
  conductingBody: string;
  seats: string;
  relatedExams: string[];
  slug: string;
  metaDescription: string;
  keywords: string[];
}

const indianExams: ExamData[] = examData.exams;
---

<Layout>
  <div class="min-h-screen flex themed-bg relative">
    <!-- Sidebar -->
    <div id="sidebar" class="w-64 themed-bg border-r border-dashed themed-border h-screen fixed transition-transform duration-300 ease-in-out z-30 lg:translate-x-0 -translate-x-full">
      <div class="p-4 sm:p-6">
        <div class="mb-6 sm:mb-8">
          <h1 class="font-serif italic text-2xl sm:text-3xl themed-text">TimeKeeper</h1>
          <p class="font-serif italic text-xs sm:text-sm themed-text-secondary">Exams Countdown</p>
          <div class="border-b border-dashed themed-border mt-3 sm:mt-4"></div>
        </div>
        <nav class="space-y-2">
          <button 
            onclick="showView('all')"
            class="nav-btn flex items-center space-x-2 px-4 py-2 w-full text-left rounded-md themed-bg-tertiary"
          >
            <span class="themed-text">All Exams</span>
          </button>
          <button 
            onclick="showView('engineering')"
            class="nav-btn flex items-center space-x-2 px-4 py-2 w-full text-left rounded-md themed-text-secondary hover:themed-bg-secondary"
          >
            <span>Engineering</span>
          </button>
          <button 
            onclick="showView('medical')"
            class="nav-btn flex items-center space-x-2 px-4 py-2 w-full text-left rounded-md themed-text-secondary hover:themed-bg-secondary"
          >
            <span>Medical</span>
          </button>
          <button 
            onclick="showView('management')"
            class="nav-btn flex items-center space-x-2 px-4 py-2 w-full text-left rounded-md themed-text-secondary hover:themed-bg-secondary"
          >
            <span>Management</span>
          </button>
          <button 
            onclick="showView('civil-services')"
            class="nav-btn flex items-center space-x-2 px-4 py-2 w-full text-left rounded-md themed-text-secondary hover:themed-bg-secondary"
          >
            <span>Civil Services</span>
          </button>
          <button 
            onclick="showView('banking')"
            class="nav-btn flex items-center space-x-2 px-4 py-2 w-full text-left rounded-md themed-text-secondary hover:themed-bg-secondary"
          >
            <span>Banking</span>
          </button>
          <button 
            onclick="showView('defence')"
            class="nav-btn flex items-center space-x-2 px-4 py-2 w-full text-left rounded-md themed-text-secondary hover:themed-bg-secondary"
          >
            <span>Defence</span>
          </button>
          <a 
            href="/countdown"
            class="nav-btn flex items-center space-x-2 px-4 py-2 w-full text-left rounded-md themed-text-secondary hover:themed-bg-secondary"
          >
            <span>Custom Countdown</span>
          </a>
        </nav>
        
        <!-- Theme Toggle Section -->
        <div class="mt-8 pt-6 border-t border-dashed themed-border">
          <div class="mb-3">
            <h3 class="text-sm font-medium themed-text mb-3">Theme</h3>
            <div class="flex items-center justify-between gap-2">
              <button 
                class="theme-circle"
                data-theme="light"
                onclick="setTheme('light')"
                title="Light Theme"
              ></button>
              <button 
                class="theme-circle"
                data-theme="dark"
                onclick="setTheme('dark')"
                title="Dark Theme"
              ></button>
              <button 
                class="theme-circle"
                data-theme="ocean"
                onclick="setTheme('ocean')"
                title="Ocean Theme"
              ></button>
              <button 
                class="theme-circle"
                data-theme="valentine"
                onclick="setTheme('valentine')"
                title="Valentine Theme"
              ></button>
              <button 
                class="theme-circle"
                data-theme="cupcake"
                onclick="setTheme('cupcake')"
                title="Cupcake Theme"
              ></button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Main Content -->
    <div class="w-full lg:ml-64 flex-1">
      <nav class="border-b border-dashed themed-border themed-bg sticky top-0 z-20">
        <div class="max-w-7xl mx-auto px-3 sm:px-4 lg:px-8 w-full">
          <div class="flex items-center justify-between h-14 sm:h-16">
            <div class="flex items-center gap-2 sm:gap-4">
              <button
                id="mobile-menu-btn"
                class="lg:hidden p-2 -ml-2 rounded-md hover:themed-bg-secondary"
                onclick="toggleMobileMenu()"
              >
                <svg class="w-6 h-6 themed-text" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                </svg>
              </button>
              <div class="flex flex-col sm:flex-row sm:items-center sm:gap-2">
                <h1 id="page-title" class="font-serif italic text-lg sm:text-xl themed-text">All Exams</h1>
                <div class="flex items-center gap-2 mt-1 sm:mt-0">
                  <span class="hidden sm:block h-px w-4 themed-bg-tertiary"></span>
                  <span id="event-count" class="text-xs sm:text-sm themed-text-secondary">
                    (25 exams)
                  </span>
                </div>
              </div>
            </div>

          </div>
        </div>
      </nav>

      <div class="max-w-7xl mx-auto w-full p-3 sm:p-4 lg:p-8 mb-8">
        <div id="events-grid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 sm:gap-4">
          <!-- Events will be populated by JavaScript -->
        </div>
      </div>
    </div>

    <!-- Mobile Menu Overlay -->
    <div
      id="mobile-overlay"
      class="fixed inset-0 bg-black bg-opacity-50 z-20 lg:hidden hidden"
      onclick="closeMobileMenu()"
    ></div>
  </div>

  <script define:vars={{ indianExams }}>
    let currentView = 'all';
    let refreshInterval;
    
    // Wait for global theme to be initialized
    document.addEventListener('DOMContentLoaded', () => {
      // Listen for theme changes to update any theme-dependent elements
      window.addEventListener('themeChanged', (event) => {
        // Update any theme-dependent UI elements here if needed
        updateNavButtons();
      });
      
      renderExams();
      // Start refreshing every second
      if (refreshInterval) clearInterval(refreshInterval);
      refreshInterval = setInterval(renderExams, 1000);
    });
    
    function formatTimeRemaining(targetDate) {
      const now = new Date().getTime();
      const target = new Date(targetDate).getTime();
      const distance = target - now;
      
      if (distance < 0) {
        return { expired: true, text: "Exam has passed" };
      }
      
      const days = Math.floor(distance / (1000 * 60 * 60 * 24));
      const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((distance % (1000 * 60)) / 1000);
      
      return {
        expired: false,
        days,
        hours,
        minutes,
        seconds,
        text: `${days}d ${hours}h ${minutes}m ${seconds}s`
      };
    }
    
    function getCategoryColor(category) {
      const colors = {
        'Engineering': 'bg-blue-50 text-blue-700 border-blue-200',
        'Medical': 'bg-green-50 text-green-700 border-green-200',
        'Management': 'bg-purple-50 text-purple-700 border-purple-200',
        'Civil Services': 'bg-orange-50 text-orange-700 border-orange-200',
        'Banking': 'bg-indigo-50 text-indigo-700 border-indigo-200',
        'Defence': 'bg-red-50 text-red-700 border-red-200',
        'Government Jobs': 'bg-yellow-50 text-yellow-700 border-yellow-200',
        'Law': 'bg-gray-50 text-gray-700 border-gray-200',
        'Teaching': 'bg-pink-50 text-pink-700 border-pink-200',
        'Railway': 'bg-teal-50 text-teal-700 border-teal-200'
      };
      return colors[category] || 'bg-gray-50 text-gray-700 border-gray-200';
    }

    function renderExams() {
      const filteredExams = currentView === 'all' 
        ? indianExams 
        : indianExams.filter(exam => exam.category.toLowerCase().replace(/\s+/g, '-') === currentView);
      
      const examsGrid = document.getElementById('events-grid');
      const pageTitle = document.getElementById('page-title');
      const examCount = document.getElementById('event-count');
      
      pageTitle.textContent = currentView === 'all' ? 'All Exams' : currentView.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ') + ' Exams';
      examCount.textContent = `(${filteredExams.length} ${filteredExams.length === 1 ? 'exam' : 'exams'})`;
      
      examsGrid.innerHTML = filteredExams.map(exam => {
        // Get the next session (earliest date)
        const nextSession = exam.sessions.reduce((earliest, session) => {
          const sessionDate = new Date(session.date);
          const earliestDate = new Date(earliest.date);
          return sessionDate < earliestDate ? session : earliest;
        });
        
        const timeRemaining = formatTimeRemaining(nextSession.date);
        const categoryColor = getCategoryColor(exam.category);
        
        // Format sessions display
        const sessionsDisplay = exam.sessions.length > 1 ? 
          `<p class="text-xs themed-text-tertiary mb-1">Next Session: ${nextSession.session}</p>` :
          '';
        
        return `
          <div class="border border-dashed themed-border p-4 sm:p-6 rounded-lg hover:themed-border-secondary transition-colors flex flex-col cursor-pointer group themed-bg" onclick="window.location.href='/exams/${exam.slug}'">
            <div class="flex items-start justify-between mb-3 sm:mb-4">
              <div class="flex-1">
                <h2 class="font-serif italic text-lg sm:text-xl themed-text mb-1 group-hover:text-blue-600 transition-colors">${exam.name}</h2>
                <p class="text-xs sm:text-sm themed-text-secondary mb-2">${exam.fullName}</p>
                <div class="flex items-center gap-2 mb-2 flex-wrap">
                  <span class="inline-block px-2 py-1 text-xs border rounded-full ${categoryColor}">
                    ${exam.category}
                  </span>
                  ${exam.sessions.length > 1 ? 
                    `<span class="inline-block px-2 py-1 text-xs bg-blue-50 text-blue-700 border border-blue-200 rounded-full">
                      ${exam.sessions.length} Sessions
                    </span>` : ''
                  }
                </div>
              </div>
            </div>
            
            <p class="text-xs sm:text-sm themed-text-secondary mb-3 sm:mb-4 line-clamp-2">${exam.description}</p>
            
            <div class="grid grid-cols-2 gap-3 mb-3 sm:mb-4 text-xs">
              <div>
                <p class="themed-text-tertiary mb-1">Conducting Body:</p>
                <p class="themed-text-secondary">${exam.conductingBody}</p>
              </div>
              <div>
                <p class="themed-text-tertiary mb-1">Duration:</p>
                <p class="themed-text-secondary">${exam.duration}</p>
              </div>
              <div>
                <p class="themed-text-tertiary mb-1">Eligibility:</p>
                <p class="themed-text-secondary">${exam.eligibility}</p>
              </div>
              <div>
                <p class="themed-text-tertiary mb-1">Total Seats:</p>
                <p class="themed-text-secondary">${exam.seats}</p>
              </div>
            </div>
            
            <div class="mt-auto">
              <div class="themed-bg-secondary p-3 rounded-md mb-3">
                ${sessionsDisplay}
                <p class="text-xs themed-text-tertiary mb-1">Exam Date: ${new Date(nextSession.date).toLocaleDateString('en-IN', { 
                  year: 'numeric', 
                  month: 'long', 
                  day: 'numeric' 
                })}</p>
                <div class="countdown-display ${timeRemaining.expired ? 'text-red-600' : 'themed-text'}">
                  ${timeRemaining.expired ? 
                    `<p class="text-sm font-medium">${timeRemaining.text}</p>` :
                    `<div class="grid grid-cols-4 gap-2 text-center">
                      <div>
                        <div class="text-lg font-bold">${timeRemaining.days}</div>
                        <div class="text-xs themed-text-tertiary">Days</div>
                      </div>
                      <div>
                        <div class="text-lg font-bold">${timeRemaining.hours}</div>
                        <div class="text-xs themed-text-tertiary">Hours</div>
                      </div>
                      <div>
                        <div class="text-lg font-bold">${timeRemaining.minutes}</div>
                        <div class="text-xs themed-text-tertiary">Min</div>
                      </div>
                      <div>
                        <div class="text-lg font-bold">${timeRemaining.seconds}</div>
                        <div class="text-xs themed-text-tertiary">Sec</div>
                      </div>
                    </div>`
                  }
                </div>
              </div>
              <div class="flex items-center justify-between text-xs themed-text-tertiary">
                <span>Click for details →</span>
                <span class="font-medium">${exam.sessions.length > 1 ? `${exam.sessions.length} Sessions` : 'Single Session'}</span>
              </div>
            </div>
          </div>
        `;
      }).join('');
    }
    
    function showView(view) {
      currentView = view;
      
      // Update nav buttons with theme-aware classes
      document.querySelectorAll('.nav-btn').forEach(btn => {
        btn.className = 'nav-btn flex items-center space-x-2 px-4 py-2 w-full text-left rounded-md themed-text-secondary hover:themed-bg-secondary';
      });
      
      event.target.className = 'nav-btn flex items-center space-x-2 px-4 py-2 w-full text-left rounded-md themed-bg-tertiary';
      
      renderExams();
    }
    
    function toggleMobileMenu() {
      const sidebar = document.getElementById('sidebar');
      const overlay = document.getElementById('mobile-overlay');
      
      if (sidebar.classList.contains('-translate-x-full')) {
        // Open sidebar
        sidebar.classList.remove('-translate-x-full');
        sidebar.classList.add('translate-x-0');
        overlay.classList.remove('hidden');
      } else {
        // Close sidebar
        sidebar.classList.remove('translate-x-0');
        sidebar.classList.add('-translate-x-full');
        overlay.classList.add('hidden');
      }
    }

    function closeMobileMenu() {
      const sidebar = document.getElementById('sidebar');
      const overlay = document.getElementById('mobile-overlay');
      sidebar.classList.remove('translate-x-0');
      sidebar.classList.add('-translate-x-full');
      overlay.classList.add('hidden');
    }
    
    // Make functions global
    window.showView = showView;
    window.toggleMobileMenu = toggleMobileMenu;
    window.closeMobileMenu = closeMobileMenu;
  </script>
</Layout>
